#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int longestIncreasingSubsequence(vector<int>& nums) {
    if (nums.empty()) return 0;

    vector<int> lis(nums.size(), 1); // LIS length at each position

    for (size_t i = 1; i < nums.size(); ++i) {
        for (size_t j = 0; j < i; ++j) {
            if (nums[i] > nums[j] && lis[i] < lis[j] + 1) {
                lis[i] = lis[j] + 1;
            }
        }
    }

    return *max_element(lis.begin(), lis.end());
}

int main() {
    vector<int> nums = {10, 22, 9, 33, 21, 50, 41, 60, 80};

    int length = longestIncreasingSubsequence(nums);

    cout << "The length of the longest increasing subsequence is: " << length << endl;

    return 0;
}
